name: terraform-automation

on:
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

#      - name: Setup ssh-key
#        uses: webfactory/ssh-agent@v0.6.0
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.3
          terraform_wrapper: false

      - name: Add profile credentials to ~/.aws/credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile smg-auto-dev
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile smg-auto-dev

      - name: Remove tf_plan if it had
        run: |
          if [ -f "tf_plan" ]; 
          then
            rm "tf_plan"
          fi
      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan --no-color -out "tf_plan" -input=false

      - name: Upload TF Plan
        uses: actions/upload-artifact@v2
        with:
          name: tf_plan
          path: .
          if-no-files-found: error
          retention-days: 1

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform_plan
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: tf_apply

    steps:
    - name: Checkout
      uses: actions/checkout@v3

#    - name: Setup ssh-key
#      uses: webfactory/ssh-agent@v0.6.0
#      with:
#        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.3
        terraform_wrapper: false

    - name: Add profile credentials to ~/.aws/credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile smg-auto-dev
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile smg-auto-dev

    - name: Download TF Plan
      uses: actions/download-artifact@v2
      with:
        name: tf_plan
        path: .

    # Provision resources via Terraform        
    - name: Terraform Apply
      run: |
        chmod +x "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"
        "${GITHUB_WORKSPACE}/.github/workflows/tf_init.sh"
        terraform show "tf_plan"
        terraform apply "tf_plan"
